plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group 'exchangeService'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.13'
}


apply plugin: "java"
apply plugin: "application"
mainClassName = "com.exchange.ApplicationExchangeService"

def jarName = rootProject.name
sourceCompatibility = 1.8


dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.18'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.2.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.2.5.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.2.5.RELEASE'

    runtimeOnly 'mysql:mysql-connector-java'
}


jar {
    baseName(jarName)
    from {
        manifest {
            attributes 'Implementation-Title': 'ApplicationExchangeService',
                    'Implementation-Version': 'version',
                    'Main-Class': 'com.exchange.ApplicationExchangeService',
                    'Class-Path': 'libs/' + jarName + '-' + version + '.jar'
        }
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-dependencies:2.2.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    }
}
